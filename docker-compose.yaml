version: '3.8'


services:
  api-1:
    image: evergreen-stores-api
    build:
      context: api
      dockerfile: Dockerfile
    container_name: api-1
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.2
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - HOST=172.20.0.2
      - PORT=5000
    restart: unless-stopped

  api-2:
    image: evergreen-stores-api
    container_name: api-2
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.3
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      - HOST=172.20.0.3
      - PORT=5001
    depends_on:
      - api-1
    restart: unless-stopped

  load-balancer:
    image: nginx:1.25.0-alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./load-balancer/nginx.conf:/etc/nginx/nginx.conf
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.4
    ports:
      - "8080:8080"
    depends_on:
      - api-1
      - api-2
    restart: unless-stopped

  redis-master:
    image: redis:7.0-alpine
    container_name: redis-master
    hostname: redis-master
    volumes:
      - evergreen-stores-database:/data/
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.5
    ports:
      - "6379:6379"
    restart: unless-stopped

  redis-slave-1:
    image: redis:7.0-alpine
    container_name: redis-slave-1
    hostname: redis-slave-1
    command: redis-server --slaveof redis-master 6379
    links:
      - redis-master
    volumes:
      - evergreen-stores-database:/data/
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.6
    restart: unless-stopped

  redis-slave-2:
    image: redis:7.0-alpine
    container_name: redis-slave-2
    hostname: redis-slave-2
    command: redis-server --slaveof redis-master 6379
    links:
      - redis-master
    volumes:
      - evergreen-stores-database:/data/
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.7
    restart: unless-stopped

  redis-sentinel-1:
    image: redis-sentinel
    build: 
      context: database/redis-sentinel
      dockerfile: Dockerfile
    container_name: redis-sentinel-1
    hostname: redis-sentinel-1
    links:
      - redis-master
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.8
    restart: unless-stopped
 
  redis-sentinel-2:
    image: redis-sentinel
    container_name: redis-sentinel-2
    hostname: redis-sentinel-2
    links:
      - redis-master
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.9
    depends_on:
      - redis-sentinel-1
    restart: unless-stopped
 
  redis-sentinel-3:
    image: redis-sentinel
    container_name: redis-sentinel-3
    hostname: redis-sentinel-3
    links:
      - redis-master
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.10
    depends_on:
      - redis-sentinel-1
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    volumes:
      - evergreen-stores-monitoring-metrics:/prometheus
      - ./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.11
    ports:
      - "9090:9090"
    command:
    - "--config.file=/etc/prometheus/prometheus.yaml"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    volumes:
      - evergreen-stores-monitoring-visualization:/var/lib/grafana
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.12
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  redis-master-monitoring-adapter:
    image: "redislabs/prometheus-redistimeseries-adapter:master"
    container_name: redis-master-monitoring-adapter
    hostname: redis-master-monitoring-adapter
    command: ["-redis-address", "172.20.0.5:6379", "-web.listen-address", "172.20.0.13:9201"]
    networks:
      evergreen-stores-network:
        ipv4_address: 172.20.0.13
    ports:
      - "9201:9201"
    depends_on:
      - prometheus
      - redis-master
    restart: unless-stopped


volumes:
  evergreen-stores-database:
    external: true
  evergreen-stores-monitoring-metrics:
    external: true
  evergreen-stores-monitoring-visualization:
    external: true


networks:
  evergreen-stores-network:
    ipam:
      config:
        - subnet: 172.20.0.0/24
